package main

import (
    "context"
    "fmt"
    "os"

    "github.com/aws/aws-sdk-go-v2/config"
    "github.com/aws/aws-sdk-go-v2/service/sqs"
)

type SQSListQueuesAPI interface {
    ListQueues(ctx context.Context,
        params *sqs.ListQueuesInput,
        optFns ...func(*sqs.Options)) (*sqs.ListQueuesOutput, error)
}

func GetQueues(c context.Context, api SQSListQueuesAPI, input *sqs.ListQueuesInput) (*sqs.ListQueuesOutput, error) {
    return api.ListQueues(c, input)
}

func main() {

    os.Setenv("HTTP_PROXY", "http://localhost:65230")
    os.Setenv("HTTP_PROXY", "http://localhost:65230")
    os.Setenv("AWS_CA_BUNDLE", "/home/ubuntu/.sdm/org.crt")

    cfg, err := config.LoadDefaultConfig(context.TODO())
    if err != nil {
        panic("configuration error, " + err.Error())
    }

    client := sqs.NewFromConfig(cfg)

    input := &sqs.ListQueuesInput{}

    result, err := GetQueues(context.TODO(), client, input)
    if err != nil {
        fmt.Println("Got an error retrieving queue URLs:")
        fmt.Println(err)
        return
    }

    for i, url := range result.QueueUrls {
        fmt.Printf("%d: %s\n", i+1, url)
    }
}
